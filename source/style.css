/**
 * Space Mono is licensed under the Open Font License v1.1 - https://scripts.sil.org/OFL
 */
@font-face {
	font-family: "Space Mono";
	font-style: normal;
	font-weight: 400;
	font-display: swap;
	src:
		url("fonts/Space Mono/Space Mono Regular Latin Basic.woff2")
		format("woff2");
	unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
@font-face {
	font-family: "Space Mono";
	font-style: normal;
	font-weight: 400;
	font-display: swap;
	src:
		url("fonts/Space Mono/Space Mono Regular Latin Extra.woff2")
		format("woff2");
	unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

* {
	box-sizing: border-box;
	font-family: "Space Mono", monospace;
}

body {
	margin: 0;
	padding: 0;
	border: 0;
	background: #2E2E2E;
	color: rgb(255 255 255);
}

h1 {
	font-size: 7vh;
	width: 100%;
	text-align: center;
}

.content {
	flex: 1 1 0;
	padding: 2rem;
}

.content h1 {
	color: #3C3F58;
	font-size: 2.5rem;
	margin-bottom: 1rem;
}

.content p {
	color: #707793;
}

div.message {
	--fade-time-ms: 500;
	position: fixed;
	left: 0;
	width: 100vw;
	opacity: 0;
	background-color: rgba(50 50 0 / .96);
	transition-property: opacity, top, height;
	transition-timing-function: ease-out;
	border-bottom: 1px solid black;
	display: grid;
	place-items: center stretch;
	grid-template-columns: auto var(--height) 1vh;
	grid-template-rows: 100%;
	grid-template-areas: "text close .";
	z-index: 2000;
}
div.message:not(:hover, :focus) {
	height: var(--height);
	z-index: 1000;
}
div.message.error {
	background-color: rgba(50 0 0 / .96);
}
div.message > p {
	grid-area: text;
	margin: 0;
	padding: .7vh;
	display: box;
	-webkit-box-orient: vertical;
}
div.message:not(:hover, :focus) > p:not(:hover, :focus) {
	-webkit-line-clamp: 1;
	overflow: hidden;
	text-overflow: ellipsis;
}
div.message > button {
	grid-area: close;
	font-size: 2.5vh;
	background: none;
	border: none;
	outline: none;
	cursor: pointer;
}

div.front {
	width: 100%;
	text-align: justify;
	padding-left: 25vw;
	padding-right: 25vw;
}

#nerd-info, #nerd-log {
	--side-margin: 1vw;
	position: fixed;
	display: none;
	bottom: var(--side-margin);
	z-index: 199;
	padding: 1vw;
	background-color: rgb(0 0 0 / 0.8);
	border: .5vw solid green;
}
body.nerd-info :is(#nerd-info, #nerd-log) {
	display: initial;
}

#nerd-info {
	left: var(--side-margin);
}
#nerd-info > * {
	display: inline-block;
	margin: 2px;
}
#nerd-info > p {
	width: 270px;
}
#nerd-info:has(output[data-status="acceptable"]) {
	border-color: yellow;
}
#nerd-info:has(output[data-status="bad"]) {
	border-color: red;
}
#nerd-info > output[data-status="good"] {
	color: green;
}
#nerd-info > output[data-status="acceptable"] {
	color: yellow;
}
#nerd-info > output[data-status="bad"] {
	color: red;
}

#nerd-log {
	right: var(--side-margin);
	width: 50vw;
	max-height: 40vh;
	padding: 0;
	overflow-x: hidden;
	overflow-y: auto;
}
#nerd-log > output {
	display: block;
	padding: 10px;
	width: 100%;
	transition: background-color .2s ease-out;
}
#nerd-log:has(output[data-severity="warning"]) {
	border-color: yellow;
}
#nerd-log:has(output[data-severity="error"]) {
	border-color: red;
}
#nerd-log > output[data-severity="warning"] {
	color: yellow;
}
#nerd-log > output[data-severity="error"] {
	color: red;
}
#nerd-log > output.highlight {
	background-color: rgb(255 255 0 / 0.5);
}

#visualizer {
	position: relative;
	margin: 3vh auto;
	height: 98vh;
	width: 96%;
}

#visualizer + * {
	margin-top: 1vh;
}

#visualizer > div {
	border: 1px solid #FFFFFF;
	position: absolute;
	left: 0;
	width: 100%;
}

#visualizer .network-container {
	top: 2%;
	height: 65%;
	overflow: hidden;
}

#visualizer .network {
	position: relative;
	margin: auto;
	max-height: 100%;
	max-width: 100%;
	aspect-ratio: var(--aspect-ratio);
	background-color: rgb(129 129 129 / 0.185);
	overflow: hidden;
}

#visualizer .network * {
	position: absolute;
}

#visualizer .network :is(.node, .packet) {
	width: var(--size);
	aspect-ratio: 1;
	margin-left: calc(var(--size) / -2);
	margin-top: calc(var(--size) / -2);
	border-radius: var(--size);
}

#visualizer .network .node {
	--size: 2.5vh;
	--color: white;
	background-color: var(--color);
	z-index: 150;
}

#visualizer .network .packet {
	--size: 2vh;
	z-index: 100;
	transition-property: top, left;
	transition-timing-function: linear;
}

#visualizer .network .AddressPacket {
	background-color: grey;
}

#visualizer .network .BlockPacket {
	background-color: var(--id);
}

#visualizer .network .connection {
	--thickness: 0.3vh;
	height: var(--thickness);
	width: var(--length);
	margin-left: calc(var(--length) / -2);
	margin-top: calc(var(--thickness) / -2);
	border-radius: var(--thickness);
	background-color: rgb(167 167 167);
	opacity: 0.5;
	z-index: 50;
	transition: opacity 0.5s ease-out;
}

#visualizer .blockchain {
	bottom: 6vh;
	height: 25vh;
	background-color: rgb(119 119 119);
	overflow-x: auto;
	overflow-y: hidden;
}

#visualizer .blockchain > .aspect-reset {
	position: relative;
	height: 100%;
	aspect-ratio: 1;
	overflow: visible;
}

#visualizer .blockchain .block {
	position: absolute;
	height: calc(var(--block-size) * .9);
	aspect-ratio: 1;
	margin-left: calc(var(--block-size) / -2);
	margin-top: calc(var(--block-size) / -2);
	background-color: var(--id);
	opacity: calc(.1 + var(--trust));
	transition-property: top, left, height, width, margin;
	transition-timing-function: ease-out;
	transition-duration: .3s;
}

#playControls {
	bottom: 0;
	padding: 1vh;
	background-color: rgb(197 197 197 / 0.158);
}

#playControls > * {
	vertical-align: middle;
}

#controls {
	background-color: rgb(197 197 197 / 0.158);
	border-top: 1px solid #FFFFFF;
	border-bottom: 1px solid #FFFFFF;
	padding: 1vh;
}

#controls button {
	cursor: pointer;
}

#controls .controlBox {
	padding-left: 20px;
}

#controls label {
	display: block;
	margin-top: 7px;
}

#controls .tooltip {
	aspect-ratio: 1;
	height: 16px;
	vertical-align: middle;
	margin-left: 5px;
	margin-bottom: 4px;
	border: none;
	background-color: unset;
	background-image: url("./images/help.svg");
	background-size: contain;
}

#controls .tooltip-dialog {
	background-color: #3E3E3E;
	color: white;
}

#controls .tooltip-dialog::backdrop {
	backdrop-filter: blur(2px);
}

#controls .update {
	aspect-ratio: 1;
	height: 20px;
	vertical-align: middle;
	margin-left: 5px;
	border: none;
	background-color: unset;
	background-image: url("./images/replay.svg");
	background-size: contain;
}

#play {
	aspect-ratio: 1;
	height: 25px;
	border: none;
	background-color: unset;
	background-image: url("./images/pause.svg");
	background-size: contain;
	cursor: pointer;
}

#play.paused {
	background-image: url("./images/play.svg");
}

#reset {
	aspect-ratio: 1;
	height: 25px;
	border: none;
	background-color: unset;
	background-image: url("./images/replay.svg");
	background-size: contain;
	cursor: pointer;
}

#timeline {
	width: 60vw;
}

footer {
	background-color: #9494943B;
	display: flex;
	align-items: center;
	justify-content: center;
	height: 10vh;
}

#vertical-align {
	--size: 40px;
	position: fixed;
	z-index: 999;
	top: 1vh;
	right: 0.5vw;
	width: var(--size);
	height: var(--size);
	border: solid 1px white;
	cursor: pointer;
	background-color: #2E3047;
	transition-property: opacity, right;
	transition-timing-function: ease-out;
	transition-duration: .3s;
}
body.visualization-in-focus #vertical-align {
	opacity: 0;
	right: calc(-1 * var(--size));
}
#vertical-align > svg {
	fill: white;
	width: 100%;
	height: 100%;
}
#vertical-align:hover > svg > :is(.top-arrow, .bottom-arrow) {
	transition: transform .3s ease-out;
}
#vertical-align:hover > svg > .top-arrow {
	transform: translateY(3%);
}
#vertical-align:hover > svg > .bottom-arrow {
	transform: translateY(-3%);
}

#controls-pane {
	--width: 300px;
	position: fixed;
	top: 0;
	left: calc(-1 * var(--width));
	height: 100vh;
	width: var(--width);
	z-index: 200;
	padding: 2rem 1rem;
	background-color: #2E3047;
	border-right: 1px solid white;
	transition-property: left, box-shadow;
	transition-timing-function: ease-out;
	transition-duration: .3s;
}

#controls-pane.open {
	left: 0;
	box-shadow: .4vh 0 .5vh 0 rgb(0 0 0 / .1);
}

h3#controls-pane {
	color: bisque;
	font-size: 0.75rem;
	text-transform: uppercase;
	margin-bottom: 0.5rem;
	position: center;
	top: 0;
	left: 0;
}

#controls-pane > .toggle {
	background-color: #2E3047;
	border: solid 1px white;
	border-left: 0;
	position: relative;
	display: inline;
	top: -20px;
	left: 283px;
	height: 40px;
	width: 40px;
	cursor: pointer;
	box-shadow: .4vh 0 .5vh 0 rgb(0 0 0 / .1);
}
#controls-pane > .toggle > svg {
	fill: white;
	width: 100%;
	height: 100%;
	transition: transform .3s ease-out;
}
#controls-pane > .toggle:hover > svg {
	transform: rotate(30deg);
}
#controls-pane.open > .toggle > svg {
	transform: rotate(240deg);
}
#controls-pane.open > .toggle:hover > svg {
	transform: rotate(210deg);
}
